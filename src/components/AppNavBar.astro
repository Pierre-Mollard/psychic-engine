---
import clsx from "clsx";
export type SpecificLink = { name: string; href: string };
export interface Props {
    links: SpecificLink[];
}
const { links } = Astro.props;

const currentSubPath = Astro.url.pathname;

// Determine the active tab
let activeTab = "";
for (const link of links) {
    if (currentSubPath.endsWith(link.href)) {
        activeTab = link.name;
        break;
    }
}
if (activeTab === "" && links.length > 0) activeTab = links[0].name;
---

<style>
    ul.top-scrollbars {
        transform: rotateX(180deg);
    }
    div.top-scrollbars-fix {
        transform: rotateX(180deg);
    }
</style>
<div class="pb-3w-full pb-3">
    <!-- Centered content area with margin on sides -->
    <div
        class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8 border-b border-on-surface-weak dark:border-on-surface-weak-dark"
    >
        <ul
            class="top-scrollbars flex flex-nowrap -mb-px overflow-x-auto scrollbar-thin scrollbar-thumb-tabbar-primary dark:scrollbar-thumb-tabbar-primary-dark scrollbar-track-transparent mt-1"
        >
            {
                links.map((link) => (
                    <div class="mr-2 top-scrollbars-fix">
                        <a
                            href={
                                activeTab === link.name ? undefined : link.href
                            }
                            class={clsx(
                                "inline-block p-4 whitespace-nowrap rounded-t-lg border-b-2 ",
                                activeTab === link.name
                                    ? "text-tabbar-primary dark:text-tabbar-primary-dark border-tabbar-primary dark:border-tabbar-primary-dark active"
                                    : "border-transparent hover:text-tabbar-hover-primary dark:hover:text-tabbar-hover-primary-dark hover:border-tabbar-hover-primary dark:hover:border-tabbar-hover-primary-dark",
                            )}
                        >
                            {link.name}
                        </a>
                    </div>
                ))
            }
        </ul>
    </div>
</div>
